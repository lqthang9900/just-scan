"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var common = require("./image-cache-it.common");
var imageSrc = require("image-source");
var view_1 = require("tns-core-modules/ui/core/view");
global.moduleMerge(common, exports);
var ImageCacheIt = (function (_super) {
    __extends(ImageCacheIt, _super);
    function ImageCacheIt() {
        return _super.call(this) || this;
    }
    Object.defineProperty(ImageCacheIt.prototype, "ios", {
        get: function () {
            return this.nativeView;
        },
        enumerable: true,
        configurable: true
    });
    ImageCacheIt.prototype.onMeasure = function (widthMeasureSpec, heightMeasureSpec) {
        var nativeView = this.nativeView;
        if (nativeView) {
            var width = view_1.layout.getMeasureSpecSize(widthMeasureSpec);
            var height = view_1.layout.getMeasureSpecSize(heightMeasureSpec);
            this.setMeasuredDimension(width, height);
        }
    };
    ImageCacheIt.prototype.createNativeView = function () {
        return UIImageView.new();
    };
    ImageCacheIt.prototype.initNativeView = function () {
        var _this = this;
        if (!this.imageUri) {
            return;
        }
        if (this.imageUri.startsWith("http")) {
            this.isLoading = true;
            this.nativeView.sd_setImageWithURLPlaceholderImageCompleted(this.imageUri, this.placeHolder ? imageSrc.fromFileOrResource(this.placeHolder).ios : null, function () {
                _this.isLoading = false;
            });
        }
        else {
            this.nativeView.image = imageSrc.fromFileOrResource(this.imageUri).ios;
        }
        if (this.resize && this.resize !== undefined && this.resize.split(' ').length > 1) {
            this.nativeView.frame.size.width = parseInt(this.resize.split(' ')[0]);
            this.nativeView.frame.size.height = parseInt(this.resize.split(' ')[1]);
        }
        else if (this.override && this.override !== undefined && this.override.split(' ').length > 1) {
            this.nativeView.frame.size.width = parseInt(this.override.split(' ')[0]);
            this.nativeView.frame.size.height = parseInt(this.override.split(' ')[1]);
        }
    };
    ImageCacheIt.prototype[common.imageUriProperty.getDefault] = function () {
        return undefined;
    };
    ImageCacheIt.prototype[common.imageUriProperty.setNative] = function (src) {
        var _this = this;
        if (!this.imageUri) {
            return;
        }
        if (this.imageUri.startsWith("http")) {
            this.isLoading = true;
            this.nativeView.sd_setImageWithURLPlaceholderImageCompleted(this.imageUri, this.placeHolder ? imageSrc.fromFileOrResource(this.placeHolder).ios : null, function () {
                _this.isLoading = false;
            });
        }
        else {
            this.nativeView.image = imageSrc.fromFileOrResource(this.imageUri).ios;
        }
    };
    ImageCacheIt.prototype[common.resizeProperty.setNative] = function (resize) {
        if (this.resize && this.resize !== undefined && this.resize.split(' ').length > 1) {
            this.nativeView.frame.size.width = parseInt(this.resize.split(' ')[0]);
            this.nativeView.frame.size.height = parseInt(this.resize.split(' ')[1]);
        }
    };
    ImageCacheIt.prototype[common.overrideProperty.setNative] = function (override) {
        if (this.override && this.override !== undefined && this.override.split(' ').length > 1) {
            this.nativeView.frame.size.width = parseInt(this.override.split(' ')[0]);
            this.nativeView.frame.size.height = parseInt(this.override.split(' ')[1]);
        }
    };
    ImageCacheIt.prototype[common.stretchProperty.getDefault] = function () {
        return "aspectFit";
    };
    ImageCacheIt.prototype[common.stretchProperty.setNative] = function (value) {
        switch (value) {
            case "aspectFit":
                this.nativeView.contentMode = UIViewContentMode.ScaleAspectFit;
                break;
            case "aspectFill":
                this.nativeView.contentMode = UIViewContentMode.ScaleAspectFill;
                break;
            case "fill":
                this.nativeView.contentMode = UIViewContentMode.ScaleToFill;
                break;
            case "none":
            default:
                this.nativeView.contentMode = UIViewContentMode.TopLeft;
                break;
        }
    };
    ImageCacheIt.prototype.clearItem = function () {
        // this.builder.
    };
    return ImageCacheIt;
}(common.ImageCacheIt));
exports.ImageCacheIt = ImageCacheIt;
//# sourceMappingURL=data:application/json;base64,