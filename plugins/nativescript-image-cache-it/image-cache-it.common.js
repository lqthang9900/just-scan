"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var view_1 = require("tns-core-modules/ui/core/view");
exports.imageUriProperty = new view_1.Property({ name: 'imageUri' });
exports.placeHolderProperty = new view_1.Property({ name: 'placeHolder' });
exports.errorHolderProperty = new view_1.Property({ name: 'errorHolder' });
exports.resizeProperty = new view_1.Property({ name: 'resize' });
exports.overrideProperty = new view_1.Property({ name: 'override' });
exports.centerCropProperty = new view_1.Property({ name: 'centerCrop', defaultValue: false });
exports.stretchProperty = new view_1.Property({ name: 'stretch' });
var ImageCacheIt = (function (_super) {
    __extends(ImageCacheIt, _super);
    function ImageCacheIt() {
        return _super.call(this) || this;
    }
    return ImageCacheIt;
}(view_1.View));
exports.ImageCacheIt = ImageCacheIt;
exports.imageUriProperty.register(ImageCacheIt);
exports.placeHolderProperty.register(ImageCacheIt);
exports.errorHolderProperty.register(ImageCacheIt);
exports.resizeProperty.register(ImageCacheIt);
exports.overrideProperty.register(ImageCacheIt);
exports.centerCropProperty.register(ImageCacheIt);
exports.stretchProperty.register(ImageCacheIt);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2UtY2FjaGUtaXQuY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW1hZ2UtY2FjaGUtaXQuY29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0RBR3VDO0FBRTFCLFFBQUEsZ0JBQWdCLEdBQUcsSUFBSSxlQUFRLENBQXVCLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUM7QUFDNUUsUUFBQSxtQkFBbUIsR0FBRyxJQUFJLGVBQVEsQ0FBdUIsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLENBQUMsQ0FBQztBQUNsRixRQUFBLG1CQUFtQixHQUFHLElBQUksZUFBUSxDQUF1QixFQUFFLElBQUksRUFBRSxhQUFhLEVBQUUsQ0FBQyxDQUFDO0FBQ2xGLFFBQUEsY0FBYyxHQUFHLElBQUksZUFBUSxDQUF1QixFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0FBQ3hFLFFBQUEsZ0JBQWdCLEdBQUcsSUFBSSxlQUFRLENBQXVCLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUM7QUFDNUUsUUFBQSxrQkFBa0IsR0FBRyxJQUFJLGVBQVEsQ0FBd0IsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0FBQ3RHLFFBQUEsZUFBZSxHQUFHLElBQUksZUFBUSxDQUF3QixFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDO0FBRXhGO0lBQWtDLGdDQUFJO0lBRWxDO2VBQ0ksaUJBQU87SUFDWCxDQUFDO0lBUUwsbUJBQUM7QUFBRCxDQUFDLEFBWkQsQ0FBa0MsV0FBSSxHQVlyQztBQVpZLG9DQUFZO0FBY3pCLHdCQUFnQixDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUN4QywyQkFBbUIsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsMkJBQW1CLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQzNDLHNCQUFjLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ3RDLHdCQUFnQixDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUN4QywwQkFBa0IsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDMUMsdUJBQWUsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIFZpZXcsXG4gICAgUHJvcGVydHlcbn0gZnJvbSAndG5zLWNvcmUtbW9kdWxlcy91aS9jb3JlL3ZpZXcnO1xuaW1wb3J0IHsgU3RyZXRjaCB9IGZyb20gJ3Rucy1jb3JlLW1vZHVsZXMvdWkvZW51bXMnO1xuZXhwb3J0IGNvbnN0IGltYWdlVXJpUHJvcGVydHkgPSBuZXcgUHJvcGVydHk8SW1hZ2VDYWNoZUl0LCBzdHJpbmc+KHsgbmFtZTogJ2ltYWdlVXJpJyB9KTtcbmV4cG9ydCBjb25zdCBwbGFjZUhvbGRlclByb3BlcnR5ID0gbmV3IFByb3BlcnR5PEltYWdlQ2FjaGVJdCwgc3RyaW5nPih7IG5hbWU6ICdwbGFjZUhvbGRlcicgfSk7XG5leHBvcnQgY29uc3QgZXJyb3JIb2xkZXJQcm9wZXJ0eSA9IG5ldyBQcm9wZXJ0eTxJbWFnZUNhY2hlSXQsIHN0cmluZz4oeyBuYW1lOiAnZXJyb3JIb2xkZXInIH0pO1xuZXhwb3J0IGNvbnN0IHJlc2l6ZVByb3BlcnR5ID0gbmV3IFByb3BlcnR5PEltYWdlQ2FjaGVJdCwgc3RyaW5nPih7IG5hbWU6ICdyZXNpemUnIH0pO1xuZXhwb3J0IGNvbnN0IG92ZXJyaWRlUHJvcGVydHkgPSBuZXcgUHJvcGVydHk8SW1hZ2VDYWNoZUl0LCBzdHJpbmc+KHsgbmFtZTogJ292ZXJyaWRlJyB9KTtcbmV4cG9ydCBjb25zdCBjZW50ZXJDcm9wUHJvcGVydHkgPSBuZXcgUHJvcGVydHk8SW1hZ2VDYWNoZUl0LCBib29sZWFuPih7IG5hbWU6ICdjZW50ZXJDcm9wJywgZGVmYXVsdFZhbHVlOiBmYWxzZSB9KTtcbmV4cG9ydCBjb25zdCBzdHJldGNoUHJvcGVydHkgPSBuZXcgUHJvcGVydHk8SW1hZ2VDYWNoZUl0LCBTdHJldGNoPih7IG5hbWU6ICdzdHJldGNoJyB9KTtcblxuZXhwb3J0IGNsYXNzIEltYWdlQ2FjaGVJdCBleHRlbmRzIFZpZXcge1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuICAgIHB1YmxpYyBpbWFnZVVyaTogc3RyaW5nO1xuICAgIHB1YmxpYyBwbGFjZUhvbGRlcjogc3RyaW5nO1xuICAgIHB1YmxpYyBlcnJvckhvbGRlcjogc3RyaW5nO1xuICAgIHB1YmxpYyByZXNpemU6IHN0cmluZztcbiAgICBwdWJsaWMgb3ZlcnJpZGU6IHN0cmluZztcbiAgICBwdWJsaWMgY2VudGVyQ3JvcDogYm9vbGVhbjtcbiAgICBwdWJsaWMgc3RyZXRjaDogU3RyZXRjaDtcbn1cbmV4cG9ydCB0eXBlIFN0cmV0Y2ggPSAnbm9uZScgfCAnZmlsbCcgfCAnYXNwZWN0RmlsbCcgfCAnYXNwZWN0Rml0JztcbmltYWdlVXJpUHJvcGVydHkucmVnaXN0ZXIoSW1hZ2VDYWNoZUl0KTtcbnBsYWNlSG9sZGVyUHJvcGVydHkucmVnaXN0ZXIoSW1hZ2VDYWNoZUl0KTtcbmVycm9ySG9sZGVyUHJvcGVydHkucmVnaXN0ZXIoSW1hZ2VDYWNoZUl0KTtcbnJlc2l6ZVByb3BlcnR5LnJlZ2lzdGVyKEltYWdlQ2FjaGVJdCk7XG5vdmVycmlkZVByb3BlcnR5LnJlZ2lzdGVyKEltYWdlQ2FjaGVJdCk7XG5jZW50ZXJDcm9wUHJvcGVydHkucmVnaXN0ZXIoSW1hZ2VDYWNoZUl0KTtcbnN0cmV0Y2hQcm9wZXJ0eS5yZWdpc3RlcihJbWFnZUNhY2hlSXQpO1xuIl19